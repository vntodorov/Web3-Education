{"abi":[{"type":"function","name":"acceptSubscriptionOwnerTransfer","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addConsumer","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"},{"name":"consumer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelSubscription","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createSubscription","inputs":[],"outputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"fundSubscriptionWithNative","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getActiveSubscriptionIds","inputs":[{"name":"startIndex","type":"uint256","internalType":"uint256"},{"name":"maxCount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getSubscription","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"balance","type":"uint96","internalType":"uint96"},{"name":"nativeBalance","type":"uint96","internalType":"uint96"},{"name":"reqCount","type":"uint64","internalType":"uint64"},{"name":"owner","type":"address","internalType":"address"},{"name":"consumers","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"pendingRequestExists","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeConsumer","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"},{"name":"consumer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestSubscriptionOwnerTransfer","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"},{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"acceptSubscriptionOwnerTransfer"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addConsumer"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cancelSubscription"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"payable","type":"function","name":"fundSubscriptionWithNative"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"stateMutability":"view","type":"function","name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"view","type":"function","name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeConsumer"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"requestSubscriptionOwnerTransfer"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@solmate/=lib/solmate/src/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/solmate/lib/ds-test/src/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/","solmate/=lib/solmate/src/","weird-erc20/=lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":"IVRFSubscriptionV2Plus"},"evmVersion":"paris","libraries":{}},"sources":{"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"keccak256":"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0","urls":["bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8","dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","id":2585,"exportedSymbols":{"IVRFSubscriptionV2Plus":[2584]},"nodeType":"SourceUnit","src":"32:3896:11","nodes":[{"id":2497,"nodeType":"PragmaDirective","src":"32:23:11","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2584,"nodeType":"ContractDefinition","src":"198:3729:11","nodes":[{"id":2506,"nodeType":"FunctionDefinition","src":"408:63:11","nodes":[],"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"235:170:11","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:11","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"subId","nameLocation":"437:5:11","nodeType":"VariableDeclaration","scope":2506,"src":"429:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"consumer","nameLocation":"452:8:11","nodeType":"VariableDeclaration","scope":2506,"src":"444:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:11"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[],"src":"470:0:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2514,"nodeType":"FunctionDefinition","src":"650:66:11","nodes":[],"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"475:172:11","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:11","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"subId","nameLocation":"682:5:11","nodeType":"VariableDeclaration","scope":2514,"src":"674:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"consumer","nameLocation":"697:8:11","nodeType":"VariableDeclaration","scope":2514,"src":"689:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:11"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"715:0:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2522,"nodeType":"FunctionDefinition","src":"863:64:11","nodes":[],"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"720:140:11","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:11","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"subId","nameLocation":"899:5:11","nodeType":"VariableDeclaration","scope":2522,"src":"891:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"to","nameLocation":"914:2:11","nodeType":"VariableDeclaration","scope":2522,"src":"906:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:11"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[],"src":"926:0:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2528,"nodeType":"FunctionDefinition","src":"1145:65:11","nodes":[],"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"931:211:11","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:11","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"subId","nameLocation":"1194:5:11","nodeType":"VariableDeclaration","scope":2528,"src":"1186:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:11"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"1209:0:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2536,"nodeType":"FunctionDefinition","src":"1381:84:11","nodes":[],"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"1214:164:11","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:11","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"subId","nameLocation":"1431:5:11","nodeType":"VariableDeclaration","scope":2536,"src":"1423:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:11","nodeType":"VariableDeclaration","scope":2536,"src":"1438:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:11"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[],"src":"1464:0:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2542,"nodeType":"FunctionDefinition","src":"2085:63:11","nodes":[],"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"1469:613:11","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:11","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[],"src":"2112:2:11"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"subId","nameLocation":"2141:5:11","nodeType":"VariableDeclaration","scope":2542,"src":"2133:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:11"},"scope":2584,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2559,"nodeType":"FunctionDefinition","src":"2577:181:11","nodes":[],"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"2152:422:11","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:11","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"subId","nameLocation":"2615:5:11","nodeType":"VariableDeclaration","scope":2559,"src":"2607:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:11"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"balance","nameLocation":"2667:7:11","nodeType":"VariableDeclaration","scope":2559,"src":"2660:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2547,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:11","nodeType":"VariableDeclaration","scope":2559,"src":"2676:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2549,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:11","nodeType":"VariableDeclaration","scope":2559,"src":"2698:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2551,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"owner","nameLocation":"2723:5:11","nodeType":"VariableDeclaration","scope":2559,"src":"2715:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:11","nodeType":"VariableDeclaration","scope":2559,"src":"2730:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2556,"nodeType":"ArrayTypeName","src":"2730:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:11"},"scope":2584,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2566,"nodeType":"FunctionDefinition","src":"3054:74:11","nodes":[],"functionSelector":"41af6c87","implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:11","parameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"subId","nameLocation":"3092:5:11","nodeType":"VariableDeclaration","scope":2566,"src":"3084:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:11"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"3122:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2563,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:11"},"scope":2584,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2577,"nodeType":"FunctionDefinition","src":"3562:113:11","nodes":[],"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"3132:427:11","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:11","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:11","nodeType":"VariableDeclaration","scope":2577,"src":"3596:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:11","nodeType":"VariableDeclaration","scope":2577,"src":"3616:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:11"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2577,"src":"3657:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ArrayTypeName","src":"3657:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:11"},"scope":2584,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2583,"nodeType":"FunctionDefinition","src":"3857:68:11","nodes":[],"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"3679:175:11","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:11","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"subId","nameLocation":"3901:5:11","nodeType":"VariableDeclaration","scope":2583,"src":"3893:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:11"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"3924:0:11"},"scope":2584,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"57:141:11","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"linearizedBaseContracts":[2584],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:11","scope":2585,"usedErrors":[]}],"license":"MIT"},"id":11}